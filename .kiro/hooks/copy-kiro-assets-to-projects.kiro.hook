{
  "enabled": true,
  "name": "COPY-KIRO-ASSETS-TO-PROJECTS",
  "description": "Copies Windsurf workflows, rules, Kiro hooks, and steering rules to all projects with .kiro and .windsurf folders",
  "version": "1",
  "when": {
    "type": "userTriggered",
    "patterns": ["*"]
  },
  "then": {
    "type": "askAgent",
    "prompt": "You are a project asset synchronization specialist that copies essential Kiro and Windsurf configurations to target projects.\n\n## Your Task\nDynamically find all projects in `/home/uratmangun/CascadeProjects` that contain `.kiro` or `.windsurf` folders and copy the following directories from the current project to them (excluding the current project itself).\n\n## Directories to Copy\n1. `.windsurf/workflows/` - All Windsurf workflow files\n2. `.windsurf/rules/` - All Windsurf rule files\n3. `.kiro/hooks/` - All Kiro hook files  \n4. `.kiro/steering/` - All Kiro steering rule files\n\n## Copy Process\n\n### Step 1: Find Target Projects\n// turbo\n```fish\n# Initialize empty list and get current project name\nset -g TARGET_PROJECTS\nset CURRENT_PROJECT (basename (pwd))\necho \"Current project: $CURRENT_PROJECT\"\necho \"Scanning /home/uratmangun/CascadeProjects for target projects...\"\n```\n\n// turbo\n```fish\n# Find projects with .kiro or .windsurf folders\nfor project_path in /home/uratmangun/CascadeProjects/*\n    if test -d \"$project_path\"\n        set project_name (basename \"$project_path\")\n        if test \"$project_name\" != \"$CURRENT_PROJECT\"\n            if test -d \"$project_path/.kiro\"; or test -d \"$project_path/.windsurf\"\n                set TARGET_PROJECTS $TARGET_PROJECTS \"$project_path\"\n                echo \"✓ Found target project: $project_name\"\n            end\n        end\n    end\nend\n```\n\n// turbo\n```fish\n# Verify we found target projects\nif test (count $TARGET_PROJECTS) -eq 0\n    echo \"✗ No target projects found with .kiro or .windsurf folders\"\n    exit 1\nelse\n    echo \"\\nFound\" (count $TARGET_PROJECTS) \"target projects:\"\n    for proj in $TARGET_PROJECTS\n        echo \"  - \"(basename $proj)\n    end\n    echo \"\"\nend\n```\n\n### Step 2: Copy Assets to All Target Projects\n// turbo\n```fish\n# Copy to each target project\nfor target_project in $TARGET_PROJECTS\n    set project_name (basename $target_project)\n    echo \"=== Copying to $project_name ===\"\n    \n    # Create target directories if they don't exist\n    mkdir -p \"$target_project/.windsurf\"\n    mkdir -p \"$target_project/.kiro\"\n    \n    # Copy workflows directory if it exists in source\n    if test -d .windsurf/workflows\n        cp -r .windsurf/workflows \"$target_project/.windsurf/\"\n        echo \"  ✓ Copied workflows\"\n    end\n    \n    # Copy rules directory if it exists in source\n    if test -d .windsurf/rules\n        cp -r .windsurf/rules \"$target_project/.windsurf/\"\n        echo \"  ✓ Copied rules\"\n    end\n    \n    # Copy hooks directory if it exists in source\n    if test -d .kiro/hooks\n        cp -r .kiro/hooks \"$target_project/.kiro/\"\n        echo \"  ✓ Copied hooks\"\n    end\n    \n    # Copy steering directory if it exists in source\n    if test -d .kiro/steering\n        cp -r .kiro/steering \"$target_project/.kiro/\"\n        echo \"  ✓ Copied steering\"\n    end\n    \n    echo \"  ✓ Completed copying to $project_name\"\nend\n```\n\n### Step 3: Verify Copy Success\n// turbo\n```fish\n# Verify each target project\nfor target_project in $TARGET_PROJECTS\n    set project_name (basename $target_project)\n    echo \"=== $project_name verification ===\"\n    \n    if test -d \"$target_project/.windsurf/workflows\"\n        set workflow_count (ls -1 \"$target_project/.windsurf/workflows/\" | wc -l)\n        echo \"  Workflows: $workflow_count files\"\n    end\n    \n    if test -d \"$target_project/.windsurf/rules\"\n        set rules_count (ls -1 \"$target_project/.windsurf/rules/\" | wc -l)\n        echo \"  Rules: $rules_count files\"\n    end\n    \n    if test -d \"$target_project/.kiro/hooks\"\n        set hooks_count (ls -1 \"$target_project/.kiro/hooks/\" | wc -l)\n        echo \"  Hooks: $hooks_count files\"\n    end\n    \n    if test -d \"$target_project/.kiro/steering\"\n        set steering_count (ls -1 \"$target_project/.kiro/steering/\" | wc -l)\n        echo \"  Steering: $steering_count files\"\n    end\nend\n```\n\n## What Gets Copied\n\n### Windsurf Workflows (.windsurf/workflows/)\n- All workflow automation files\n- Slash command definitions\n- Process documentation\n\n### Windsurf Rules (.windsurf/rules/)\n- Converted Kiro steering rules in Windsurf format\n- Always-on and glob-triggered rules\n- Development standards for Windsurf\n\n### Kiro Hooks (.kiro/hooks/)\n- All automated hook files\n- User-triggered and event-based automations\n- Project-specific configurations\n\n### Kiro Steering (.kiro/steering/)\n- Development standards and rules\n- Shell preferences and coding guidelines\n- Project configuration standards\n\n## Notes\n- Uses `cp -r` to recursively copy directories and preserve structure\n- Creates target directories if they don't exist\n- Overwrites existing files in target locations\n- Maintains file permissions and timestamps\n- Uses fish shell syntax throughout\n- Uses reliable for-loop based project discovery\n- Provides clear output during execution\n\nThis workflow ensures all target projects with existing .kiro or .windsurf folders have the same Kiro and Windsurf configurations as the source project, automatically discovering and updating them without manual configuration.\n\nExecute this process to synchronize Kiro and Windsurf assets across all target projects."
  }
}
